name: Build, Containerize and Deploy Python Solution to Azure Web App - theoraclegpt

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Stage Source Repository
        uses: actions/checkout@v4

      - name: Install Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Package Python Web App
        run: |
          zip release.zip ./* -r -x "venv/*"

      - name: Stage Release Package
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip

  containerize:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Release Package
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Extract Python and React Web App
        run: unzip release.zip    

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
  
      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: https://elideus.azurecr.io/
          username: ${{ secrets.AzureAppService_ContainerUsername_31021cfb0928428e9dede9923d7bea14 }}
          password: ${{ secrets.AzureAppService_ContainerPassword_d86503938508418db5d5dff48afb595f }}
  
      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: elideus.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_31021cfb0928428e9dede9923d7bea14 }}/elideus-metal:${{ github.sha }}
          file: ./Dockerfile
          build-args: |
            PYTHON_ENV=/app/venv

  deploy:
    runs-on: ubuntu-latest
    needs: containerize
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'elideus-metal'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_661b06691607456389e60862d03bbcad }}
        images: 'elideus.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_31021cfb0928428e9dede9923d7bea14 }}/elideus-metal:${{ github.sha }}'
